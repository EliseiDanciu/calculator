{"version":3,"sources":["components/Calculator.js","components/Buttons.js","components/Formula.js","components/Output.js","App.js","serviceWorker.js","index.js"],"names":["initialState","currentVal","formula","checkForDecimal","checkForOperator","Calculator","props","_this","Object","C_Users_elisei_danciu_Desktop_React_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_elisei_danciu_Desktop_React_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_elisei_danciu_Desktop_React_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleNumbers","e","_this$state","state","test","target","value","console","log","length","setState","concat","toString","handleOperators","slice","calculate","expression","lastElement","result","eval","reset","_this$state2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","className","_Formula__WEBPACK_IMPORTED_MODULE_7__","_Output__WEBPACK_IMPORTED_MODULE_8__","_Buttons__WEBPACK_IMPORTED_MODULE_6__","Component","Buttons","_this$props","onClick","style","width","Formula","React","Output","App","react_default","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.346b7236.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Buttons from \"./Buttons\";\r\nimport Formula from \"./Formula\";\r\nimport Output from \"./Output\";\r\n\r\nconst initialState = { currentVal: \"0\", formula: \"\" };\r\nconst checkForDecimal = /[.]+/;\r\nconst checkForOperator = /([/+\\-*])/;\r\n\r\nexport default class Calculator extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = initialState;\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconsole.log(this.state);\r\n\t}\r\n\r\n\thandleNumbers = e => {\r\n\t\tconst { currentVal, formula } = this.state;\r\n\t\t//Ignore multiple dots\r\n\t\tif (checkForDecimal.test(currentVal) && e.target.value === \".\") {\r\n\t\t\tconsole.log(\"Ignored\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Remove initial zero\r\n\t\tif (currentVal[0] === \"0\" && currentVal.length > 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentVal: e.target.value,\r\n\t\t\t\tformula: formula.concat(e.target.value.toString())\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t//Concat number pressed to currentValue\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentVal: currentVal.concat(e.target.value),\r\n\t\t\t\tformula: formula.concat(e.target.value.toString())\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\thandleOperators = e => {\r\n\t\tconst { formula } = this.state;\r\n\r\n\t\tif (checkForOperator.test(e.target.value) && formula === \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tcurrentVal: e.target.value,\r\n\t\t\tformula: formula.concat(e.target.value.toString())\r\n\t\t});\r\n\r\n\t\t//If the last element in formula is an operator substitute it with the new insterted one\r\n\t\tif (checkForOperator.test(formula[formula.length - 1])) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentVal: e.target.value,\r\n\t\t\t\tformula: formula.slice(0, formula.length - 3).concat(e.target.value)\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tcalculate = e => {\r\n\t\tconst { formula } = this.state;\r\n\t\tlet expression = formula;\r\n\t\tconst lastElement = expression[expression.length - 1];\r\n\t\t//If ends with operator or decimal remove it\r\n\t\tif (\r\n\t\t\tcheckForOperator.test(lastElement) ||\r\n\t\t\tcheckForDecimal.test(lastElement)\r\n\t\t) {\r\n\t\t\texpression = expression.slice(0, -1);\r\n\t\t}\r\n\t\tconst result = eval(expression);\r\n\t\tthis.setState({\r\n\t\t\tcurrentVal: result.toString(),\r\n\t\t\tformula: result.toString()\r\n\t\t});\r\n\t};\r\n\r\n\treset = () => {\r\n\t\tthis.setState(initialState);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { currentVal, formula } = this.state;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div id=\"displays\" className=\"display\">\r\n\t\t\t\t\t<Formula formula={formula} />\r\n\t\t\t\t\t<Output currentVal={currentVal} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Buttons\r\n\t\t\t\t\thandleNumbers={this.handleNumbers}\r\n\t\t\t\t\thandleOperators={this.handleOperators}\r\n\t\t\t\t\tcalculate={this.calculate}\r\n\t\t\t\t\treset={this.reset}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Buttons extends Component {\r\n\trender() {\r\n\t\tconst { handleNumbers, handleOperators, calculate, reset } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"clear\"\r\n\t\t\t\t\tvalue=\"clear\"\r\n\t\t\t\t\tonClick={reset}\r\n\t\t\t\t\tstyle={{ width: \"75%\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\tAC\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"subtract\" value=\"-\" onClick={handleOperators}>\r\n\t\t\t\t\t-\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"seven\" value=\"7\" onClick={handleNumbers}>\r\n\t\t\t\t\t7\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"eight\" value=\"8\" onClick={handleNumbers}>\r\n\t\t\t\t\t8\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"nine\" value=\"9\" onClick={handleNumbers}>\r\n\t\t\t\t\t9\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"add\" value=\"+\" onClick={handleOperators}>\r\n\t\t\t\t\t+\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"four\" value=\"4\" onClick={handleNumbers}>\r\n\t\t\t\t\t4\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"five\" value=\"5\" onClick={handleNumbers}>\r\n\t\t\t\t\t5\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"six\" value=\"6\" onClick={handleNumbers}>\r\n\t\t\t\t\t6\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"divide\" value=\"/\" onClick={handleOperators}>\r\n\t\t\t\t\t/\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"one\" value=\"1\" onClick={handleNumbers}>\r\n\t\t\t\t\t1\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"two\" value=\"2\" onClick={handleNumbers}>\r\n\t\t\t\t\t2\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"three\" value=\"3\" onClick={handleNumbers}>\r\n\t\t\t\t\t3\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"multiply\" value=\"*\" onClick={handleOperators}>\r\n\t\t\t\t\t*\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"zero\" value=\"0\" onClick={handleNumbers}>\r\n\t\t\t\t\t0\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"decimal\" value=\".\" onClick={handleNumbers}>\r\n\t\t\t\t\t.\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"equals\"\r\n\t\t\t\t\tvalue=\"=\"\r\n\t\t\t\t\tonClick={calculate}\r\n\t\t\t\t\tstyle={{ width: \"50%\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t=\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\n\r\nclass Formula extends React.Component {\r\n\trender() {\r\n\t\tconst { formula } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"formulaScreen\">\r\n\t\t\t\t<p>{formula}</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Formula;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Output extends Component {\r\n\trender() {\r\n\t\tconst { currentVal } = this.props;\r\n\t\treturn (\r\n\t\t\t<div id=\"display\" className=\"outputScreen\">\r\n\t\t\t\t<p>{currentVal}</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Output;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./components/Calculator\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"container calculator\">\n\t\t\t\t\t<Calculator />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}